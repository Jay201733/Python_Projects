# -*- coding: utf-8 -*-
"""hangman.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yN0rEQRZhFRo8KmG_zcTlag-ef-iWryD
"""

from words import words
import random
import string

def get_valid_word(words):
  word = random.choice(words)
  while '_' in word or ' ' in word:
    word = random.choice(words)
  
  return word.upper()

#the aim is to keep a track of the word that we guessed


def hangman():
  word = get_valid_word(words) 
  word_letters = set(word) # letters in the word
  alphabet = set(string.ascii_uppercase)
  used_letters = set() #what the user has guessed

  lives = 6


  while len(word_letters)>0:
    #letters used
    print("lives left: ", lives, ". You have used these characters: ", " ".join(used_letters))

    #what the current word is
    word_list = [letter if letter in used_letters else "-" for letter in word]
    print("Current word: "," ".join(word_list))

    #getting user input
    user_letter = input("Guess a letter: ").upper()
    if user_letter in alphabet - used_letters:
         used_letters.add(user_letter)

         if user_letter in word_letters:
            word_letters.remove(user_letter)

         else:
           lives = lives - 1 #takes away a life if wrong
           print("Letters is not in word.")

           if lives == 0:
             print("You lose")
             print("The actual word was ", word)
             break
    
    elif user_letter in used_letters:
         print("You have already used that character. Please try again")
    
    else:
         print("invalid character, please try again")  
  
  if len(word_letters) == 0:
     print("Congratulations, the actual word was: ", word)

hangman()